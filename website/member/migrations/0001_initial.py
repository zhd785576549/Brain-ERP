# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-18 07:31
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='\u7528\u6237\u540d')),
                ('password', models.CharField(max_length=200, verbose_name='\u5bc6\u7801')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='\u7535\u5b50\u90ae\u4ef6')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='phone')),
                ('gender', models.SmallIntegerField(choices=[(0, 'unset'), (1, 'male'), (2, 'female')], default=0, null=True, verbose_name='gender')),
                ('real_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='real name')),
                ('birth_of_date', models.DateField(null=True, verbose_name='birth of date')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='whether super user or not')),
                ('is_staff', models.BooleanField(default=False, verbose_name='whether enter backend or not')),
                ('last_login', models.DateTimeField(null=True, verbose_name='last login datetime')),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='create datetime')),
                ('modify', models.DateTimeField(auto_now=True, verbose_name='modify datetime')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'member',
            },
        ),
    ]
